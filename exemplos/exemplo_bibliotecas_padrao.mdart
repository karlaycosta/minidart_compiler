// Exemplo de uso das bibliotecas padr√£o em MiniDart
importar io;
    // Fun√ß√£o que demonstra o uso da biblioteca Math
    vazio testarMath() {
        io.escrever("=== Testando Biblioteca Math ===");
        
        // Trigonometria
        constante var angulo = 1.5708;  // œÄ/2
        io.escrever("sin(œÄ/2) = " + math.sin(angulo));
        io.escrever("cos(0) = " + math.cos(0));
        
        // Pot√™ncias e ra√≠zes
        io.escrever("2¬≥ = " + math.pow(2, 3));
        io.escrever("‚àö16 = " + math.sqrt(16));
        
        // Utilit√°rios
        io.escrever("|‚àí5| = " + math.abs(-5));
        io.escrever("max(10, 20) = " + math.max(10, 20));
        io.escrever("min(10, 20) = " + math.min(10, 20));
        // Constantes
        io.escrever("œÄ = " + math.PI());
        io.escrever("e = " + math.E());
        
        // N√∫mero aleat√≥rio
        io.escrever("N√∫mero aleat√≥rio: " + math.random());
    }
    
    // // Fun√ß√£o que demonstra o uso da biblioteca String
    // vazio testarStrings() {
    //     io.escrever("\n=== Testando Biblioteca String ===");
        
    //     constante var texto1 = "MiniDart √© Fant√°stico";
        
    //     io.escrever("Texto original: " + texto1);
    //     io.escrever("Tamanho: " + string.tamanho(texto1));
    //     io.escrever("Mai√∫scula: " + string.maiuscula(texto1));
    //     io.escrever("Min√∫scula: " + string.minuscula(texto1));
    //     io.escrever("Invertido: " + string.inverter(texto1));
        
    //     // Verifica√ß√µes
    //     se (string.contem(texto1, "Dart")) {
    //         io.escrever("‚úì Cont√©m 'Dart'");
    //     }
        
    //     se (string.comecaCom(texto1, "Mini")) {
    //         io.escrever("‚úì Come√ßa com 'Mini'");
    //     }
        
    //     se (string.terminaCom(texto1, "Fant√°stico")) {
    //         io.escrever("‚úì Termina com 'Fant√°stico'");
    //     }
        
    //     // Manipula√ß√£o
    //     var posicao = string.encontrar(texto1, "Dart");
    //     io.escrever("Posi√ß√£o de 'Dart': " + posicao);
        
    //     var novo = string.substituir(texto1, "MiniDart", "SuperDart");
    //     io.escrever("Texto modificado: " + novo);
        
    //     var fatia = string.fatiar(texto1, 0, 8);
    //     io.escrever("Fatia [0:8]: " + fatia);
        
    //     var repetido = string.repetir("üéâ", 5);
    //     io.escrever("Repeti√ß√£o: " + repetido);
    // }
    
    // // Fun√ß√£o que demonstra entrada/sa√≠da
    // vazio testarIO() {
    //     io.escrever("\n=== Testando Biblioteca IO ===");
        
    //     io.imprimir("Esta √© uma linha completa!");
    //     io.io.escrever("Texto sem quebra... ");
    //     io.io.escrever("continuando na mesma linha!\n");
        
    //     io.escrever("Digite algo (simulado):");
    //     var entrada = io.lerTexto();
    //     io.escrever("Voc√™ digitou: " + entrada);
    // }
    
    // // Fun√ß√£o que calcula √°rea de c√≠rculo usando bibliotecas
    // real calcularAreaCirculo(real raio) {
    //     constante var pi = math.PI();
    //     var area = pi * math.pow(raio, 2);
    //     retorne area;
    // }
    
    // // Fun√ß√£o que formata nome usando strings
    // texto formatarNome(texto nome, texto sobrenome) {
    //     var nomeCompleto = nome + " " + sobrenome;
    //     var formatado = string.maiuscula(string.fatiar(nomeCompleto, 0, 1)) + 
    //                    string.minuscula(string.fatiar(nomeCompleto, 1, string.tamanho(nomeCompleto)));
    //     retorne formatado;
    // }
    

    io.escrever("üöÄ Demonstra√ß√£o das Bibliotecas Padr√£o MiniDart\n");
        
        // Testando bibliotecas b√°sicas
    testarMath();
    // testarStrings();
    // testarIO();
        
    //     // Exemplos pr√°ticos
    // io.escrever("\n=== Exemplos Pr√°ticos ===");
        
    //     // Calculando √°rea de c√≠rculo
    //     constante var raio = 5;
    //     var area = calcularAreaCirculo(raio);
    //     io.escrever("√Årea do c√≠rculo (raio=" + raio + "): " + math.round(area));
        
    //     // Formatando nomes
    //     var nome1 = formatarNome("JO√ÉO", "silva");
    //     var nome2 = formatarNome("maria", "SANTOS");
    //     io.escrever("Nome formatado 1: " + nome1);
    //     io.escrever("Nome formatado 2: " + nome2);
        
    //     // Verificando se string √© pal√≠ndromo
    //     logico ehPalindromo(texto palavra) {
    //         var limpa = string.minuscula(palavra);
    //         var invertida = string.inverter(limpa);
    //         retorne limpa == invertida;
    //     }
        
    //     constante var palavra1 = "Arara";
    //     constante var palavra2 = "MiniDart";
        
    //     io.escrever("'" + palavra1 + "' √© pal√≠ndromo? " + ehPalindromo(palavra1));
    //     io.escrever("'" + palavra2 + "' √© pal√≠ndromo? " + ehPalindromo(palavra2));
        
    //     // Gerando senhas aleat√≥rias simples
    //     texto gerarSenha(inteiro tamanho) {
    //         var senha = "";
    //         constante var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            
    //         para (var i = 0; i < tamanho; i = i + 1) {
    //             var indice = math.floor(math.random() * string.tamanho(chars));
    //             var char = string.fatiar(chars, indice, indice + 1);
    //             senha = senha + char;
    //         }
            
    //         retorne senha;
    //     }
        
    //     io.escrever("\nüîê Senhas aleat√≥rias geradas:");
    //     para (var i = 0; i < 3; i = i + 1) {
    //         var senha = gerarSenha(8);
    //         io.escrever("Senha " + (i + 1) + ": " + senha);
    //     }
        
    //     io.escrever("\n‚úÖ Demonstra√ß√£o conclu√≠da!");
    


// Este c√≥digo demonstra como seria o uso das bibliotecas padr√£o
// em um programa MiniDart real. Note que:
//
// 1. Fun√ß√µes nativas s√£o chamadas com prefixo (math., string., io.)
// 2. Integra√ß√£o natural com a sintaxe existente
// 3. Permite criar programas muito mais interessantes
// 4. Mant√©m a simplicidade e clareza do MiniDart
